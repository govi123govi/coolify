---
# PersistentVolume for EFS
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  namespace: coolify
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: efs-sc
  nfs:
    path: /postgres
    server: fs-0d92c30ec4b8f2220.efs.us-east-1.amazonaws.com
  persistentVolumeReclaimPolicy: Retain
---
# PersistentVolumeClaim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: coolify
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: efs-sc
  resources:
    requests:
      storage: 10Gi
---
# Secret for PostgreSQL credentials
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: coolify
type: Opaque
data:
  POSTGRES_PASSWORD: R3VqamFyQDIy  # Base64 encoded value of Gujjar@22
---
# ConfigMap for PostgreSQL configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: coolify
data:
  POSTGRES_DB: coolify
  POSTGRES_USER: coolify
---
# StatefulSet for PostgreSQL
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: coolify
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "coolify"]
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "coolify"]
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
---
# Headless Service for PostgreSQL
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: coolify
spec:
  ports:
    - port: 5432
      targetPort: 5432
  clusterIP: None
  selector:
    app: postgres
